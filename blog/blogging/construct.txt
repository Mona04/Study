1:HL["/study-log/_next/static/css/51482d48e1d52c77.css",{"as":"style"}]
0:["zhJLl8_U9ZxsqueEbY603",[[["",{"children":["blog",{"children":[["categories","blogging/construct","c"],{"children":["__PAGE__?{\"categories\":[\"blogging\",\"construct\"]}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/study-log/_next/static/css/51482d48e1d52c77.css","precedence":"next"}]],"$L3"]]]]
4:I{"id":5392,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"ContextProvider","async":false}
5:I{"id":5656,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
6:I{"id":57,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
7:I{"id":5003,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
8:I{"id":3084,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
9:I{"id":3677,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
a:I{"id":3119,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
b:I{"id":7674,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
c:I{"id":4277,"chunks":["929:static/chunks/4f9d9cd8-4e2da51b8f15e759.js","712:static/chunks/3627521c-2c02ffe699de489f.js","685:static/chunks/685-d24e8e96f673298e.js","185:static/chunks/app/layout-9e785e076d4eef65.js"],"name":"","async":false}
d:I{"id":7767,"chunks":["272:static/chunks/webpack-f4ed9418fc0e32ad.js","971:static/chunks/fd9d1056-c4b752c762ad4496.js","596:static/chunks/596-eb6abf128d61afe5.js"],"name":"default","async":false}
e:I{"id":7920,"chunks":["272:static/chunks/webpack-f4ed9418fc0e32ad.js","971:static/chunks/fd9d1056-c4b752c762ad4496.js","596:static/chunks/596-eb6abf128d61afe5.js"],"name":"default","async":false}
10:I{"id":99,"chunks":["685:static/chunks/685-d24e8e96f673298e.js","722:static/chunks/722-003b4cf29a15022f.js","631:static/chunks/app/blog/[...categories]/page-70f074bc5f4c796e.js"],"name":"","async":false}
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"Make a Blog using NextJS"}],["$","meta","2",{"name":"description","content":"..."}],["$","meta","3",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
11:T152b,<h2 id="필요한 기능">필요한 기능</h2>
<h3 id="블로그 포스트 관련">블로그 포스트 관련</h3>
<ol>
<li>
<p>Markdown / MDX 를 사용할 예정이다.</p>
</li>
<li>
<p>블로그 포스트를 Category 별로 표시하여 사이드 메뉴에 표시해야한다.</p>
</li>
<li>
<p>Post Title, Content, Tag 및 Category 로 검색기능이 필요하다.</p>
</li>
<li>
<p>코드를 이쁘게 나오게 하고 싶다.</p>
</li>
<li>
<p>수식 표현을 위해 latex 지원이 필요하다.</p>
</li>
</ol>
<h3 id="페이지 관련">페이지 관련</h3>
<ol>
<li>
<p>다크모드가 필요하다.</p>
</li>
<li>
<p>밑에 가장 최근에 블로그를 업데이트한(빌드한) 시간을 표시하고 싶다.</p>
</li>
<li>
<p>블로그 글 목록은 Grid 형식이고 스크롤을 내릴 때마다 나타낼때 서서히 나타나는 효과가 있었으면 좋겠다. <a href="https://blog.itcode.dev/comments">ex</a></p>
</li>
</ol>
<h3 id="기타">기타</h3>
<ul>
<li>공부상태 이쁘게 표현해서 화면에 띄우고 싶다.</li>
<li>영작용 포스트 페이지가 필요하다. 한글 / 영어 이렇게 나오게 하고 싶다.</li>
<li>open ai api 를 이용해서 뭐 하나 만들고 싶다.</li>
</ul>
<h2 id="프레임워크">프레임워크</h2>
<h3 id="웹 개발 프레임워크">웹 개발 프레임워크</h3>
<p><a href="https://css-tricks.com/comparing-static-site-generator-build-times/">SSG 프레임워크 성능 비교</a></p>
<p>react 를 써보고 싶어 gatsby 랑 nextjs 중에 고민했는데 컴파일 속도보고 nextjs 로 정했다.</p>
<h3 id="CSS 프레임워크">CSS 프레임워크</h3>
<p><a href="https://ykss.netlify.app/translation/the_pros_and_cons_of_tailwindcss/">Tailwind 장단점</a></p>
<p><a href="https://fe-developers.kakaoent.com/2022/220303-tailwind-tips/">TailwindCSS 사용기</a></p>
<h3 id="CMS">CMS</h3>
<p>내가 필요한 기능은 markdown hot reload 와 검색기능을 위한 전체 데이터 최적화이다.</p>
<p>결론부터 말하면 나는 그냥 <a href="https://www.contentlayer.dev/">ContentLayer</a>를 쓰기로 했다.
글을 쓰는 2023.07 에는 아직 베타버전이라 버그도 많지만 내가 필요한 기능이 모두 있고 nextjs 공식 사이트에서 지원한다고 적혀져 있어 이후 지원도 기대할 수 있기 때문이다.</p>
<p>이전에 내가 고려한 것은  <a href="https://github.com/hashicorp/next-remote-watch">next remote watch</a> 였는데 next.js 12 버전까지 지원하고 이후는 소식이 뚝 끊겨있었다.
그래서 내가 직접 파일변경 이벤트를 받아오고 nextjs hot reload api 를 호출하려고 했는데 이게 private api 라 숨겨져있었고 찾을 수 없었다.
나중에 보니까 <code>next/router</code> 를 사용하던데 자세히는 모르겠다.</p>
<h3 id="Search Framework">Search Framework</h3>
<p><a href="https://blog.rhostem.com/posts/2018-08-23-blog-search">rhostem 의 커스텀 검색</a></p>
<p><a href="https://lunrjs.com/">lunrjs</a></p>
<h2 id="Content">Content</h2>
<h3 id="Syntax Highlight">Syntax Highlight</h3>
<p>Contentlayer 에서 rehype 관련 모듈을 넣어줄 수가 있다.</p>
<p>많이 사용되는 것으로는
<a href="https://www.npmjs.com/package/rehype-highlight">Rehype Highlight</a>,
<a href="https://www.npmjs.com/package/rehype-prism-plus">Rehype Prism Plus</a>,
<a href="https://rehype-pretty-code.netlify.app/">Rehype Pretty Code</a>
가 있엇는데 난 마지막 것을 선택했다.</p>
<ul>
<li>server side 에서 미리 파싱하는 특성 상 html 용량이 조금 나가지만 더 빠르다.</li>
<li>줄/단어 하이라이트 같은 부가 기능도 붙어있고 커스터마이즈도 편하다.</li>
<li>문서도 잘되어있어서 Rehype Prism Plus 대신 써보았다.</li>
</ul>
<h4 id="Copy 버튼">Copy 버튼</h4>
<p>요즘 Code Block 은 Copy 버튼이 붙어있다. 이를 구현하기 위해서 <a href="https://claritydev.net/blog/copy-to-clipboard-button-nextjs-mdx-rehype">claritydev blog</a> 를 참고하여 구현하였다.</p>
<p><code>unist-util-visit</code> 을 이용해서 code 가 parse 되기 전에 원본 데이터를 따로 저장해둔다는 것이 핵심이다.</p>
<ul>
<li>성능 차이가 궁금해서 포스트 1000개로 테스트도 해봤다.<code>Measure-Command { start-process npm 'run contentlayer build' -wait}</code> 를 사용했는데 전처리/후처리 여부는 결과에 큰 영향을 주지 않았다.</li>
</ul>
<p>이렇게 저장한 데이터를 실질적으로 복사하는 부분을 <code>&#x3C;script></code> 를 통해서 Copy 를 구현했다. markdown 에도 적용하고 싶었기 때문에 react 를 쓸 수 없었기 때문이다.</p>
<h3 id="Latex">Latex</h3>
<p><code>MathJax</code> 는 <a href="https://github.com/remarkjs/remark-math/issues/80">NextJS hydration issue</a> 가 현재 블로그를 만드는 시점에 있다.</p>
<p>markdown 은 처음부터 html 로 바꿔서 문제가 없는데 mdx 은 바뀐 결과물이 react 문법과 겹쳐서 그런가 문제가 생긴다.</p>
<p>그래서 mdx 는 <code>katex</code> 를 사용했다.</p>
<h3 id="TOC">TOC</h3>
<h3></h3>
<h2 id="Issue">Issue</h2>
<p>ContentLayer 가 table 을 parse 하지 않아서 <code>remark-gfm</code> 을 사용했는데 <code>4.0.0</code> 버전에서는 에러가 뜬다. <code>3.x</code> 버전에는 잘 동작하고 있다.</p>12:T1245,
## 필요한 기능


### 블로그 포스트 관련

1. Markdown / MDX 를 사용할 예정이다.

2. 블로그 포스트를 Category 별로 표시하여 사이드 메뉴에 표시해야한다.

3. Post Title, Content, Tag 및 Category 로 검색기능이 필요하다.

4. 코드를 이쁘게 나오게 하고 싶다.

5. 수식 표현을 위해 latex 지원이 필요하다.



### 페이지 관련

1. 다크모드가 필요하다.

2. 밑에 가장 최근에 블로그를 업데이트한(빌드한) 시간을 표시하고 싶다. 

3. 블로그 글 목록은 Grid 형식이고 스크롤을 내릴 때마다 나타낼때 서서히 나타나는 효과가 있었으면 좋겠다. [ex](https://blog.itcode.dev/comments)



### 기타

+ 공부상태 이쁘게 표현해서 화면에 띄우고 싶다. 
+ 영작용 포스트 페이지가 필요하다. 한글 / 영어 이렇게 나오게 하고 싶다.
+ open ai api 를 이용해서 뭐 하나 만들고 싶다.



## 프레임워크

### 웹 개발 프레임워크

[SSG 프레임워크 성능 비교](https://css-tricks.com/comparing-static-site-generator-build-times/)

react 를 써보고 싶어 gatsby 랑 nextjs 중에 고민했는데 컴파일 속도보고 nextjs 로 정했다.


### CSS 프레임워크

[Tailwind 장단점](https://ykss.netlify.app/translation/the_pros_and_cons_of_tailwindcss/)

[TailwindCSS 사용기](https://fe-developers.kakaoent.com/2022/220303-tailwind-tips/)


### CMS

내가 필요한 기능은 markdown hot reload 와 검색기능을 위한 전체 데이터 최적화이다. 

결론부터 말하면 나는 그냥 [ContentLayer](https://www.contentlayer.dev/)를 쓰기로 했다. 
글을 쓰는 2023.07 에는 아직 베타버전이라 버그도 많지만 내가 필요한 기능이 모두 있고 nextjs 공식 사이트에서 지원한다고 적혀져 있어 이후 지원도 기대할 수 있기 때문이다.

이전에 내가 고려한 것은  [next remote watch](https://github.com/hashicorp/next-remote-watch) 였는데 next.js 12 버전까지 지원하고 이후는 소식이 뚝 끊겨있었다. 
그래서 내가 직접 파일변경 이벤트를 받아오고 nextjs hot reload api 를 호출하려고 했는데 이게 private api 라 숨겨져있었고 찾을 수 없었다. 
나중에 보니까 ```next/router``` 를 사용하던데 자세히는 모르겠다.

### Search Framework

[rhostem 의 커스텀 검색](https://blog.rhostem.com/posts/2018-08-23-blog-search)

[lunrjs](https://lunrjs.com/)



## Content

### Syntax Highlight

Contentlayer 에서 rehype 관련 모듈을 넣어줄 수가 있다.

많이 사용되는 것으로는
[Rehype Highlight](https://www.npmjs.com/package/rehype-highlight), 
[Rehype Prism Plus](https://www.npmjs.com/package/rehype-prism-plus), 
[Rehype Pretty Code](https://rehype-pretty-code.netlify.app/)
가 있엇는데 난 마지막 것을 선택했다.
+ server side 에서 미리 파싱하는 특성 상 html 용량이 조금 나가지만 더 빠르다.
+ 줄/단어 하이라이트 같은 부가 기능도 붙어있고 커스터마이즈도 편하다.
+ 문서도 잘되어있어서 Rehype Prism Plus 대신 써보았다. 

#### Copy 버튼

요즘 Code Block 은 Copy 버튼이 붙어있다. 이를 구현하기 위해서 [claritydev blog](https://claritydev.net/blog/copy-to-clipboard-button-nextjs-mdx-rehype) 를 참고하여 구현하였다.

```unist-util-visit``` 을 이용해서 code 가 parse 되기 전에 원본 데이터를 따로 저장해둔다는 것이 핵심이다.
+ 성능 차이가 궁금해서 포스트 1000개로 테스트도 해봤다.```Measure-Command { start-process npm 'run contentlayer build' -wait}``` 를 사용했는데 전처리/후처리 여부는 결과에 큰 영향을 주지 않았다.

이렇게 저장한 데이터를 실질적으로 복사하는 부분을 ```<script>``` 를 통해서 Copy 를 구현했다. markdown 에도 적용하고 싶었기 때문에 react 를 쓸 수 없었기 때문이다.



### Latex

```MathJax``` 는 [NextJS hydration issue](https://github.com/remarkjs/remark-math/issues/80) 가 현재 블로그를 만드는 시점에 있다. 

markdown 은 처음부터 html 로 바꿔서 문제가 없는데 mdx 은 바뀐 결과물이 react 문법과 겹쳐서 그런가 문제가 생긴다.

그래서 mdx 는 ```katex``` 를 사용했다.



### TOC



### 



## Issue

ContentLayer 가 table 을 parse 하지 않아서 ```remark-gfm``` 을 사용했는데 ```4.0.0``` 버전에서는 에러가 뜬다. ```3.x``` 버전에는 잘 동작하고 있다.13:T152b,<h2 id="필요한 기능">필요한 기능</h2>
<h3 id="블로그 포스트 관련">블로그 포스트 관련</h3>
<ol>
<li>
<p>Markdown / MDX 를 사용할 예정이다.</p>
</li>
<li>
<p>블로그 포스트를 Category 별로 표시하여 사이드 메뉴에 표시해야한다.</p>
</li>
<li>
<p>Post Title, Content, Tag 및 Category 로 검색기능이 필요하다.</p>
</li>
<li>
<p>코드를 이쁘게 나오게 하고 싶다.</p>
</li>
<li>
<p>수식 표현을 위해 latex 지원이 필요하다.</p>
</li>
</ol>
<h3 id="페이지 관련">페이지 관련</h3>
<ol>
<li>
<p>다크모드가 필요하다.</p>
</li>
<li>
<p>밑에 가장 최근에 블로그를 업데이트한(빌드한) 시간을 표시하고 싶다.</p>
</li>
<li>
<p>블로그 글 목록은 Grid 형식이고 스크롤을 내릴 때마다 나타낼때 서서히 나타나는 효과가 있었으면 좋겠다. <a href="https://blog.itcode.dev/comments">ex</a></p>
</li>
</ol>
<h3 id="기타">기타</h3>
<ul>
<li>공부상태 이쁘게 표현해서 화면에 띄우고 싶다.</li>
<li>영작용 포스트 페이지가 필요하다. 한글 / 영어 이렇게 나오게 하고 싶다.</li>
<li>open ai api 를 이용해서 뭐 하나 만들고 싶다.</li>
</ul>
<h2 id="프레임워크">프레임워크</h2>
<h3 id="웹 개발 프레임워크">웹 개발 프레임워크</h3>
<p><a href="https://css-tricks.com/comparing-static-site-generator-build-times/">SSG 프레임워크 성능 비교</a></p>
<p>react 를 써보고 싶어 gatsby 랑 nextjs 중에 고민했는데 컴파일 속도보고 nextjs 로 정했다.</p>
<h3 id="CSS 프레임워크">CSS 프레임워크</h3>
<p><a href="https://ykss.netlify.app/translation/the_pros_and_cons_of_tailwindcss/">Tailwind 장단점</a></p>
<p><a href="https://fe-developers.kakaoent.com/2022/220303-tailwind-tips/">TailwindCSS 사용기</a></p>
<h3 id="CMS">CMS</h3>
<p>내가 필요한 기능은 markdown hot reload 와 검색기능을 위한 전체 데이터 최적화이다.</p>
<p>결론부터 말하면 나는 그냥 <a href="https://www.contentlayer.dev/">ContentLayer</a>를 쓰기로 했다.
글을 쓰는 2023.07 에는 아직 베타버전이라 버그도 많지만 내가 필요한 기능이 모두 있고 nextjs 공식 사이트에서 지원한다고 적혀져 있어 이후 지원도 기대할 수 있기 때문이다.</p>
<p>이전에 내가 고려한 것은  <a href="https://github.com/hashicorp/next-remote-watch">next remote watch</a> 였는데 next.js 12 버전까지 지원하고 이후는 소식이 뚝 끊겨있었다.
그래서 내가 직접 파일변경 이벤트를 받아오고 nextjs hot reload api 를 호출하려고 했는데 이게 private api 라 숨겨져있었고 찾을 수 없었다.
나중에 보니까 <code>next/router</code> 를 사용하던데 자세히는 모르겠다.</p>
<h3 id="Search Framework">Search Framework</h3>
<p><a href="https://blog.rhostem.com/posts/2018-08-23-blog-search">rhostem 의 커스텀 검색</a></p>
<p><a href="https://lunrjs.com/">lunrjs</a></p>
<h2 id="Content">Content</h2>
<h3 id="Syntax Highlight">Syntax Highlight</h3>
<p>Contentlayer 에서 rehype 관련 모듈을 넣어줄 수가 있다.</p>
<p>많이 사용되는 것으로는
<a href="https://www.npmjs.com/package/rehype-highlight">Rehype Highlight</a>,
<a href="https://www.npmjs.com/package/rehype-prism-plus">Rehype Prism Plus</a>,
<a href="https://rehype-pretty-code.netlify.app/">Rehype Pretty Code</a>
가 있엇는데 난 마지막 것을 선택했다.</p>
<ul>
<li>server side 에서 미리 파싱하는 특성 상 html 용량이 조금 나가지만 더 빠르다.</li>
<li>줄/단어 하이라이트 같은 부가 기능도 붙어있고 커스터마이즈도 편하다.</li>
<li>문서도 잘되어있어서 Rehype Prism Plus 대신 써보았다.</li>
</ul>
<h4 id="Copy 버튼">Copy 버튼</h4>
<p>요즘 Code Block 은 Copy 버튼이 붙어있다. 이를 구현하기 위해서 <a href="https://claritydev.net/blog/copy-to-clipboard-button-nextjs-mdx-rehype">claritydev blog</a> 를 참고하여 구현하였다.</p>
<p><code>unist-util-visit</code> 을 이용해서 code 가 parse 되기 전에 원본 데이터를 따로 저장해둔다는 것이 핵심이다.</p>
<ul>
<li>성능 차이가 궁금해서 포스트 1000개로 테스트도 해봤다.<code>Measure-Command { start-process npm 'run contentlayer build' -wait}</code> 를 사용했는데 전처리/후처리 여부는 결과에 큰 영향을 주지 않았다.</li>
</ul>
<p>이렇게 저장한 데이터를 실질적으로 복사하는 부분을 <code>&#x3C;script></code> 를 통해서 Copy 를 구현했다. markdown 에도 적용하고 싶었기 때문에 react 를 쓸 수 없었기 때문이다.</p>
<h3 id="Latex">Latex</h3>
<p><code>MathJax</code> 는 <a href="https://github.com/remarkjs/remark-math/issues/80">NextJS hydration issue</a> 가 현재 블로그를 만드는 시점에 있다.</p>
<p>markdown 은 처음부터 html 로 바꿔서 문제가 없는데 mdx 은 바뀐 결과물이 react 문법과 겹쳐서 그런가 문제가 생긴다.</p>
<p>그래서 mdx 는 <code>katex</code> 를 사용했다.</p>
<h3 id="TOC">TOC</h3>
<h3></h3>
<h2 id="Issue">Issue</h2>
<p>ContentLayer 가 table 을 parse 하지 않아서 <code>remark-gfm</code> 을 사용했는데 <code>4.0.0</code> 버전에서는 에러가 뜬다. <code>3.x</code> 버전에는 잘 동작하고 있다.</p>2:[null,["$","html",null,{"lang":"en","children":["$","body",null,{"className":"tw-relative tw-min-h-screen tw-bg-color-page-background","children":[["$","script",null,{"dangerouslySetInnerHTML":{"__html":"(function() {\n    function setInitialColorMode() {\n    /**\r\n   * 만약 localStorage 가 유효하지 않다면 => media 설정으로 처리\r\n   * 만약 localStorage 가 유효하다면 => local Storage 로 처리\r\n   */ if (localStorage.getItem(\"theme\") == null && window.matchMedia(\"(prefers-color-scheme: dark)\").matches || localStorage.getItem(\"theme\") == \"dark\") {\n        document.documentElement.setAttribute(\"data-theme\", \"dark\");\n    }\n}\n    setInitialColorMode();\n  })()\n"}}],["$","link",null,{"rel":"stylesheet","href":"//fonts.googleapis.com/css2?family=Noto+Sans&family=Noto+Sans+KR&display=swap"}],["$","link",null,{"rel":"stylesheet","href":"https://cdn.jsdelivr.net/npm/katex@0.16.0/dist/katex.min.css","integrity":"sha384-Xi8rHCmBmhbuyyhbI88391ZKP2dmfnOl4rT9ZfRI7mLTdk1wblIUnrIq35nqwEvC","crossOrigin":"anonymous"}],["$","$L4",null,{"children":[["$","nav",null,{"className":"masthead_masthead__zVIwm","children":[["$","$L5",null,{}],["$","a",null,{"className":"tw-grow tw-self-center tw-ml-1   tw-font-sans tw-font-bold tw-text-color-primary tw-text-xl   hover:tw-text-color-text ","href":"/study-log/","rel":"$undefined","target":"_self","onClick":"$undefined","children":"LOG | STUDY"}],["$","$L6",null,{"className":"tw-flex tw-self-center tw-text-xl"}],["$","$L7",null,{"className":"tw-flex tw-self-center tw-ml-2 tw-mr-4 tw-text-xl "}]]}],["$","$L8",null,{"className":"tw-z-10"}],["$","aside",null,{"children":["$","$L9",null,{"children":["$","div",null,{"className":"sidebar_sidebar__Wqt36","children":[["$","$La",null,{"slug":"/","label":"HOME","refCount":-1,"depth":0}],["$","div",null,{"children":[["$","$La","/blog",{"slug":"/blog","label":"BLOG","refCount":17,"depth":0,"children":[["$","$La","/blog/blogging",{"slug":"/blog/blogging","label":"BLOGGING","refCount":4,"depth":1,"children":[["$","$La","/blog/blogging/test",{"slug":"/blog/blogging/test","label":"TEST","refCount":2,"depth":2,"children":"$undefined"}]]}],["$","$La","/blog/study",{"slug":"/blog/study","label":"STUDY","refCount":7,"depth":1,"children":[["$","$La","/blog/study/wpf",{"slug":"/blog/study/wpf","label":"WPF","refCount":1,"depth":2,"children":"$undefined"}]]}],["$","$La","/blog/web",{"slug":"/blog/web","label":"WEB","refCount":2,"depth":1,"children":"$undefined"}]]}]]}]]}]}]}],["$","section",null,{"children":["$","$Lb",null,{"children":["$","$Lc",null,{}]}]}],["$","main",null,{"className":"tw-mt-nav-height tw-pt-1 tw-pb-52","children":["$","$Ld",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$Le",null,{}],"templateStyles":"$undefined","notFound":["$","main",null,{"children":["$","div",null,{"children":"404"}]}],"notFoundStyles":[],"childProp":{"current":["$","$Ld",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$Le",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":[null,["$","$Ld",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["categories","blogging/construct","c"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$Le",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$Lf",[["$","$L10",null,{"post":{"isMDX":false,"slug":"/blog/blogging/construct","content":"$11","raw":"$12","title":"Make a Blog using NextJS","description":"Hello World \r","date":"2023-06-21T00:00:00.000Z"}}],["$","article",null,{"children":[["$","meta",null,{"itemProp":"headline","content":"Make a Blog using NextJS"}],["$","meta",null,{"itemProp":"description","content":"Hello World \r"}],["$","meta",null,{"itemProp":"datePublished","content":"2023-06-21T00:00:00.000Z"}],[["$","h1",null,{"className":"text-3xl font-bold","children":"Make a Blog using NextJS"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$13"}}]]]}]],null],"segment":"__PAGE__?{\"categories\":[\"blogging\",\"construct\"]}"},"styles":[]}],null],"segment":["categories","blogging/construct","c"]},"styles":[]}],"segment":"blog"},"styles":[]}]}],["$","footer",null,{"className":"tw-absolute tw-w-full -tw-bottom-20","children":["$","div",null,{"className":"tw-backdrop-brightness-95  tw-text-xs","children":["$","div",null,{"className":"tw-flex tw-p-4 tw-mr-4 tw-ml-4   dark:tw-border-t-color-border dark:tw-border-t-2","children":[["$","div",null,{"className":"tw-flex-col","children":[["$","div",null,{"className":"tw-mb-3","children":["$","a",null,{"className":"tw-flex tw-self-center","href":"/study-loghttps://github.com/Mona04","rel":"$undefined","target":"_self","onClick":"$undefined","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 1024 1024","className":"tw-self-center","children":["$undefined",[["$","path","0",{"d":"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z","children":"$undefined"}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","div",null,{"className":"tw-ml-1 tw-font-bold","children":"GITHUB"}]]}]}],["$","div",null,{"className":"","children":["© 2023 Mona04. Powered by ",["$","a",null,{"className":"$undefined","href":"/study-loghttps://nextjs.org/","rel":"noopener noreferrer","target":"_blank","onClick":"$undefined","children":"NextJS"}]," & ",["$","a",null,{"className":"$undefined","href":"/study-loghttps://contentlayer.dev/","rel":"noopener noreferrer","target":"_blank","onClick":"$undefined","children":"ContentLayer"}],"."]}]]}],["$","div",null,{"className":"tw-flex tw-self-end tw-ml-auto   phone:tw-absolute phone:tw-collapse","children":[["$","div",null,{"className":"","children":"Last Build:"}],["$","div",null,{"className":"tw-ml-1","children":"12:40"}],["$","div",null,{"className":"tw-ml-1","children":"2023/11/2"}]]}]]}]}]}]]}],["$","link",null,{"rel":"stylesheet","href":"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n  (function() {\n    function copyButtonScript() {\n    if (!document) return;\n    const titlebars = document.querySelectorAll(\"[data-rehype-pretty-code-title]\");\n    for (const titlebar of titlebars){\n        var buttons = titlebar.getElementsByTagName(\"button\");\n        for (const button of buttons){\n            button.addEventListener(\"click\", function() {\n                if (navigator.clipboard) {\n                    var code = titlebar.getAttribute(\"data-code\");\n                    if (code != null) {\n                        navigator.clipboard.writeText(code);\n                        button.setAttribute(\"checked\", \"true\");\n                        button.disabled = true;\n                    }\n                    setTimeout(()=>{\n                        button.removeAttribute(\"checked\");\n                        button.disabled = false;\n                    }, 2000);\n                }\n            });\n        }\n    }\n}\n    copyButtonScript();\n  })()\n"},"defer":true}]]}]}],null]
f:null
