2:I[5250,["700","static/chunks/700-64528b002ca1adec.js","612","static/chunks/612-2fd8501fd183cd16.js","799","static/chunks/799-7b8e5d14f8ee1725.js","198","static/chunks/198-e700a23c67fed8ca.js","631","static/chunks/app/blog/%5B...categories%5D/page-0442384e5f2c5a6a.js"],""]
3:I[8646,["700","static/chunks/700-64528b002ca1adec.js","612","static/chunks/612-2fd8501fd183cd16.js","799","static/chunks/799-7b8e5d14f8ee1725.js","198","static/chunks/198-e700a23c67fed8ca.js","631","static/chunks/app/blog/%5B...categories%5D/page-0442384e5f2c5a6a.js"],""]
6:I[1558,["700","static/chunks/700-64528b002ca1adec.js","612","static/chunks/612-2fd8501fd183cd16.js","799","static/chunks/799-7b8e5d14f8ee1725.js","198","static/chunks/198-e700a23c67fed8ca.js","631","static/chunks/app/blog/%5B...categories%5D/page-0442384e5f2c5a6a.js"],""]
7:I[4507,["700","static/chunks/700-64528b002ca1adec.js","612","static/chunks/612-2fd8501fd183cd16.js","799","static/chunks/799-7b8e5d14f8ee1725.js","198","static/chunks/198-e700a23c67fed8ca.js","631","static/chunks/app/blog/%5B...categories%5D/page-0442384e5f2c5a6a.js"],""]
8:I[4626,["700","static/chunks/700-64528b002ca1adec.js","612","static/chunks/612-2fd8501fd183cd16.js","799","static/chunks/799-7b8e5d14f8ee1725.js","198","static/chunks/198-e700a23c67fed8ca.js","631","static/chunks/app/blog/%5B...categories%5D/page-0442384e5f2c5a6a.js"],"WithTooltip"]
9:I[3991,["700","static/chunks/700-64528b002ca1adec.js","612","static/chunks/612-2fd8501fd183cd16.js","799","static/chunks/799-7b8e5d14f8ee1725.js","198","static/chunks/198-e700a23c67fed8ca.js","631","static/chunks/app/blog/%5B...categories%5D/page-0442384e5f2c5a6a.js"],""]
a:I[5613,[],""]
c:I[1778,[],""]
4:Tae9,
## 앞서서

Particle 은 Unity, Unreal 등 다양한 엔진에서 디자이너가 파라미터와 약간의 코딩으로 다양한 효과를 낼 수 있도록 제공되고 있다.
덕분에 어떠한 원리로 구현되는지 몰라도 편하게 사용할 수 있지만 나는 실제로 구현하면서 이를 탐구해보려고 한다.

## GPU Programming

직접 구현하기 위해서 우리는 GPU Programming 에 대해서 알아야한다.

### Threading

Logical Hierarchy 는 크게 3가지 그룹으로 나뉘어진다.

+ a thread
    + unique identifier 를 가짐.
    + local memory 가 있다.
+ a block
    + shared memory 가 있어서 같은 block 끼리 동기화가 가능. 
+ a grid

Physical Hierarchy 는 크게 두가지 그룹으로 나뉘어진다.

+ SP(Stream Processor)
+ SM(Stream Mutltiprocessor)


### GPU Hardware

현재 관심이 있는 것은 바로 병렬 프로그래밍이 gpu 에서 어떻게 이루어지냐이다. 

최근에 rtx 3080 을 샀다. 여기에는 cuda core(shading unit) 이 8704 개가 있고 SM 갯수가 68 개가 있다. 

Pipeline
+ GPU Pipeline 과 Compute Pipeline 으로 크게 나눌 수 있는데, 

CPU 에서 GPU 로 명령 리스트를 보내고, 


## Particle System 이란?

파티클(Particles) 은 파티클 시스템에 의해 큰 숫자로 표시되고 이동되는 작고 단순한 이미지 또는 메시입니다. 각 파티클은 유체 또는 비정질 엔티티의 작은 부분을 나타내며, 모든 파티클의 효과가 전체 엔티티의 느낌을 만듭니다.[^def_particle]

이는 크게 다음과 같은 요소로 구현되어 있다.

1. Emit
    - Particle 하나하나의 LifeCycle 관리. 
2. Simulate
    - 위치, 색깔 등의 변경.
3. Rendering
    - 어떤 방법으로 Blending 할 것인가.


### Emit

### Simulate

### Rendering

#### Bitonic Sort

gpu 의 이점을 살려 bitonic sort. 

https://codingdog.tistory.com/entry/%EB%B0%94%EC%9D%B4%ED%86%A0%EB%8B%89-%EC%A0%95%EB%A0%AC-%EC%97%87%EA%B0%88%EB%A0%A4-%EA%B0%80%EB%A9%B4%EC%84%9C-sorting-%ED%95%9C%EB%8B%A4




## 참고자료

[rastertek dx11tut39](https://rastertek.com/dx11tut39.html)

[unreal4 particle doc](https://docs.unrealengine.com/4.27/ko/Resources/ContentExamples/EffectsGallery/1_B/)

[Advanced Visual Effects with DirectX 11: Compute-Based GPU Particle Systems](https://www.youtube.com/watch?v=fduKhsm3ID8)

[SO](https://stackoverflow.com/questions/2207171/how-much-is-run-concurrently-on-a-gpu-given-its-numbers-of-sms-and-sps/2213744#2213744)


[3080 견적](https://www.techpowerup.com/gpu-specs/geforce-rtx-3080.c3621)


[^def_particle]: [unity doc 5.6](https://docs.unity3d.com/560/Documentation/Manual/PartSysWhatIs.html)5:Tf20,<h2 id="앞서서">앞서서</h2>
<p>Particle 은 Unity, Unreal 등 다양한 엔진에서 디자이너가 파라미터와 약간의 코딩으로 다양한 효과를 낼 수 있도록 제공되고 있다.
덕분에 어떠한 원리로 구현되는지 몰라도 편하게 사용할 수 있지만 나는 실제로 구현하면서 이를 탐구해보려고 한다.</p>
<h2 id="GPU-Programming">GPU Programming</h2>
<p>직접 구현하기 위해서 우리는 GPU Programming 에 대해서 알아야한다.</p>
<h3 id="Threading">Threading</h3>
<p>Logical Hierarchy 는 크게 3가지 그룹으로 나뉘어진다.</p>
<ul>
<li>a thread
<ul>
<li>unique identifier 를 가짐.</li>
<li>local memory 가 있다.</li>
</ul>
</li>
<li>a block
<ul>
<li>shared memory 가 있어서 같은 block 끼리 동기화가 가능.</li>
</ul>
</li>
<li>a grid</li>
</ul>
<p>Physical Hierarchy 는 크게 두가지 그룹으로 나뉘어진다.</p>
<ul>
<li>SP(Stream Processor)</li>
<li>SM(Stream Mutltiprocessor)</li>
</ul>
<h3 id="GPU-Hardware">GPU Hardware</h3>
<p>현재 관심이 있는 것은 바로 병렬 프로그래밍이 gpu 에서 어떻게 이루어지냐이다.</p>
<p>최근에 rtx 3080 을 샀다. 여기에는 cuda core(shading unit) 이 8704 개가 있고 SM 갯수가 68 개가 있다.</p>
<p>Pipeline</p>
<ul>
<li>GPU Pipeline 과 Compute Pipeline 으로 크게 나눌 수 있는데,</li>
</ul>
<p>CPU 에서 GPU 로 명령 리스트를 보내고,</p>
<h2 id="Particle-System-이란?">Particle System 이란?</h2>
<p>파티클(Particles) 은 파티클 시스템에 의해 큰 숫자로 표시되고 이동되는 작고 단순한 이미지 또는 메시입니다. 각 파티클은 유체 또는 비정질 엔티티의 작은 부분을 나타내며, 모든 파티클의 효과가 전체 엔티티의 느낌을 만듭니다.<sup><a href="#user-content-fn-def_particle" id="user-content-fnref-def_particle" data-footnote-ref="" aria-describedby="footnote-label">1</a></sup></p>
<p>이는 크게 다음과 같은 요소로 구현되어 있다.</p>
<ol>
<li>Emit
<ul>
<li>Particle 하나하나의 LifeCycle 관리.</li>
</ul>
</li>
<li>Simulate
<ul>
<li>위치, 색깔 등의 변경.</li>
</ul>
</li>
<li>Rendering
<ul>
<li>어떤 방법으로 Blending 할 것인가.</li>
</ul>
</li>
</ol>
<h3 id="Emit">Emit</h3>
<h3 id="Simulate">Simulate</h3>
<h3 id="Rendering">Rendering</h3>
<h4 id="Bitonic-Sort">Bitonic Sort</h4>
<p>gpu 의 이점을 살려 bitonic sort.</p>
<p><a href="https://codingdog.tistory.com/entry/%EB%B0%94%EC%9D%B4%ED%86%A0%EB%8B%89-%EC%A0%95%EB%A0%AC-%EC%97%87%EA%B0%88%EB%A0%A4-%EA%B0%80%EB%A9%B4%EC%84%9C-sorting-%ED%95%9C%EB%8B%A4">https://codingdog.tistory.com/entry/%EB%B0%94%EC%9D%B4%ED%86%A0%EB%8B%89-%EC%A0%95%EB%A0%AC-%EC%97%87%EA%B0%88%EB%A0%A4-%EA%B0%80%EB%A9%B4%EC%84%9C-sorting-%ED%95%9C%EB%8B%A4</a></p>
<h2 id="참고자료">참고자료</h2>
<p><a href="https://rastertek.com/dx11tut39.html">rastertek dx11tut39</a></p>
<p><a href="https://docs.unrealengine.com/4.27/ko/Resources/ContentExamples/EffectsGallery/1_B/">unreal4 particle doc</a></p>
<p><a href="https://www.youtube.com/watch?v=fduKhsm3ID8">Advanced Visual Effects with DirectX 11: Compute-Based GPU Particle Systems</a></p>
<p><a href="https://stackoverflow.com/questions/2207171/how-much-is-run-concurrently-on-a-gpu-given-its-numbers-of-sms-and-sps/2213744#2213744">SO</a></p>
<p><a href="https://www.techpowerup.com/gpu-specs/geforce-rtx-3080.c3621">3080 견적</a></p>
<section data-footnotes="" class="footnotes"><h2 class="sr-only" id="Footnotes">Footnotes</h2>
<ol>
<li id="user-content-fn-def_particle">
<p><a href="https://docs.unity3d.com/560/Documentation/Manual/PartSysWhatIs.html">unity doc 5.6</a> <a href="#user-content-fnref-def_particle" data-footnote-backref="" aria-label="Back to reference 1" class="data-footnote-backref">↩</a></p>
</li>
</ol>
</section>b:["categories","computer-science/graphics/particle-system","c"]
0:["gKg-xY6uZNdXF_p5j62Gq",[[["",{"children":["blog",{"children":[["categories","computer-science/graphics/particle-system","c"],{"children":["__PAGE__?{\"categories\":[\"computer-science\",\"graphics\",\"particle-system\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["categories","computer-science/graphics/particle-system","c"],{"children":["__PAGE__",{},["$L1",["$","article",null,{"className":"content2","children":[["$","h1",null,{"className":"mobile:tw-text-2xl tw-text-3xl tw-leading-normal tw-font-bold tw-mt-0","itemProp":"headline","children":"Particle System"}],["$","nav",null,{"className":"tw-flex tw-flex-row tw-text-smtw-mb-4","children":[["$","span",null,{"className":"material-symbols-outlined md-base tw-self-center tw-align-text-top  tw-w-5","children":"folder_open"}],["$","$L2",null,{"className":"tw-text-sm","href":"/","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":"Home"}],[["$","div","/blog/",{"className":"tw-flex tw-flex-row tw-text-sm","children":[["$","div",null,{"children":"/"}],["$","$L2",null,{"className":"$undefined","href":"/blog/","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":"blog"}]]}],["$","div","/blog/computer-science/",{"className":"tw-flex tw-flex-row tw-text-sm","children":[["$","div",null,{"children":"/"}],["$","$L2",null,{"className":"$undefined","href":"/blog/computer-science/","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":"computer-science"}]]}],["$","div","/blog/computer-science/graphics/",{"className":"tw-flex tw-flex-row tw-text-sm","children":[["$","div",null,{"children":"/"}],["$","$L2",null,{"className":"$undefined","href":"/blog/computer-science/graphics/","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":"graphics"}]]}],["$","div","/blog/computer-science/graphics/particle-system/",{"className":"tw-flex tw-flex-row tw-text-sm","children":[["$","div",null,{"children":"/"}],["$","$L2",null,{"className":"$undefined","href":"/blog/computer-science/graphics/particle-system/","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":"particle-system"}]]}]],"$undefined"]}],["$","div",null,{"className":"tw-mt-0.5","children":["$","div",null,{"className":"tw-flex tw-flex-row tw-text-sm","children":[["$","i",null,{"className":"material-symbols-outlined md-sm tw-self-center   tw-w-5","children":"schedule"}],["$","div",null,{"className":"tw-color-text-dimmed","children":"Posted  :"}],["$","div",null,{"className":"tw-ml-2","children":"11/9/2023"}]]}]}],["$","$L3",null,{"mdSrc":"$4"}],["$","hr",null,{}],["$","div",null,{"className":"tw-my-10","children":["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$5"}}]}],["$","$L6",null,{"tags":["graphics"]}],["$","hr",null,{"className":"tw-my-4"}],["$","section",null,{"className":"tw-m-0 tw-p-0","children":["$","div",null,{"className":"tw-grid tw-grid-cols-2","children":[["$","article",null,{"className":"tw-m-1 tw-rounded-2xl tw-border-2 tw-border-color-border tw-overflow-hidden   hover:tw-border-color-primary hover:tw-transition-all hover:tw-duration-500","children":["$","$L2",null,{"className":"$undefined","href":"/blog/computer-science/graphics/dx12","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":["$","div",null,{"className":"tw-m-2 tw-overflow-hidden tw-text-center","children":[["$","h5",null,{"className":"tw-mb-0 tw-mt-0 false","children":"Previous Post"}],["$","h4",null,{"className":"tw-mb-0 tw-mt-0    tw-whitespace-nowrap tw-text-ellipsis tw-overflow-hidden","children":"DirectX12"}]]}]}]}],["$","article",null,{"className":"tw-m-1 tw-rounded-2xl tw-border-color-border tw-border-2 ","children":["$","div",null,{"className":"tw-m-2 tw-overflow-hidden tw-text-center","children":[["$","h5",null,{"className":"tw-mb-0 tw-mt-0 tw-text-color-border","children":"Next Post"}],["$","h4",null,{"className":"tw-mb-0 tw-mt-0    tw-whitespace-nowrap tw-text-ellipsis tw-overflow-hidden","children":"$undefined"}]]}]}]]}]}],["$","hr",null,{"className":"tw-my-4"}],[["$","$L7",null,{}]," ",["$","hr",null,{"className":"tw-my-4"}]],["$","section",null,{"className":"","children":[["$","h4",null,{"className":"tw-mt-0 tw-mb-2","children":"Related Posts"}],["$","div",null,{"className":"tw-grid tw-grid-cols-1 desk:tw-grid-cols-2 medium:tw-grid-cols-4 medium-wide:tw-grid-cols-4","children":[["$","$L8",null,{"children":["$","article",null,{"className":"mobile:tw-h-24 tw-m-1   tw-border-2 tw-rounded-2xl tw-border-color-border   hover:tw-border-color-primary hover:tw-transition-all hover:tw-duration-500","children":["$","$L2",null,{"className":"$undefined","href":"/blog/computer-science/graphics/dx12","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":["$","div",null,{"className":"tw-grid mobile:tw-grid-cols-3 tw-m-2 tw-overflow-hidden","children":[["$","div",null,{"className":"mobile:tw-col-span-1 mobile:tw-h-20 desk:tw-max-h-40 desk:tw-mb-2 w-m-1 tw-border-2 tw-border-color-border ","children":["$","$L9",null,{"src":"/study-log/images/empty-300x200.jpg","alt":"Thumbnail","className":"tw-h-full tw-w-full","width":256,"height":256,"fill":"$undefined","priority":true,"children":null}]}],["$","div",null,{"className":"mobile:tw-col-span-2 mobile:tw-h-20 desk:tw-max-h-36 tw-mx-2 tw-overflow-hidden","children":[["$","h4",null,{"className":"tw-mb-0 tw-mt-0    tw-whitespace-nowrap tw-text-ellipsis tw-overflow-hidden tooltip-hover","children":"DirectX12"}],["$","p",null,{"className":"tw-text-color-text-light tw-text-sm    tw-text-ellipsis tw-overflow-hidden tooltip-hover","children":""}]]}]]}]}]}]}],["$","$L8",null,{"children":["$","article",null,{"className":"mobile:tw-h-24 tw-m-1   tw-border-2 tw-rounded-2xl tw-border-color-border   hover:tw-border-color-primary hover:tw-transition-all hover:tw-duration-500","children":["$","$L2",null,{"className":"$undefined","href":"/blog/computer-science/graphics/compute-shader","rel":"$undefined","target":"_self","onClick":"$undefined","prefetch":false,"children":["$","div",null,{"className":"tw-grid mobile:tw-grid-cols-3 tw-m-2 tw-overflow-hidden","children":[["$","div",null,{"className":"mobile:tw-col-span-1 mobile:tw-h-20 desk:tw-max-h-40 desk:tw-mb-2 w-m-1 tw-border-2 tw-border-color-border ","children":["$","$L9",null,{"src":"/study-log/images/empty-300x200.jpg","alt":"Thumbnail","className":"tw-h-full tw-w-full","width":256,"height":256,"fill":"$undefined","priority":true,"children":null}]}],["$","div",null,{"className":"mobile:tw-col-span-2 mobile:tw-h-20 desk:tw-max-h-36 tw-mx-2 tw-overflow-hidden","children":[["$","h4",null,{"className":"tw-mb-0 tw-mt-0    tw-whitespace-nowrap tw-text-ellipsis tw-overflow-hidden tooltip-hover","children":"Particle System"}],["$","p",null,{"className":"tw-text-color-text-light tw-text-sm    tw-text-ellipsis tw-overflow-hidden tooltip-hover","children":""}]]}]]}]}]}]}]]}]]}]]}],null]]},[null,["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$b","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/study-log/_next/static/css/601f73c9b9392328.css","precedence":"next","crossOrigin":""}]]}],null]]},["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en"}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/study-log/_next/static/css/3a1b838be770f782.css","precedence":"next","crossOrigin":""}]],"$Ld"]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Particle System"}],["$","link","3",{"rel":"author","href":"moksha1905@gmail.com"}],["$","meta","4",{"name":"author","content":"Mona04"}],["$","meta","5",{"name":"category","content":"/blog/computer-science/graphics/particle-system"}],["$","link","6",{"rel":"canonical","href":"https://mona04.github.io/study-log/blog/computer-science/graphics/particle-system"}],["$","link","7",{"rel":"icon","href":"/study-log/favicon.ico"}]]
1:null
