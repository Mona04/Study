{"version":3,"file":"component---src-pages-test-tsx-36e3c6a9a68c2e50f6aa.js","mappings":"kOAAA,MAAMA,EAA6B,aAE5B,SAASC,IAAwB,MAAyB,oBAAXC,MAAsB,CAMrE,SAASC,IACZ,QAAIF,KACgE,SAA7DG,SAASC,gBAAgBC,aAAaN,EACjD,CACO,SAASO,IACRN,KACJG,SAASC,gBAAgBG,aAAaR,EAAmB,OAC7D,CACO,SAASS,IACRR,KACJG,SAASC,gBAAgBG,aAAaR,EAAmB,QAC7D,CCf2B,IAMrBU,EAAc,SAAAC,GAIlB,SAAAD,EAAYE,GACZ,IAAAC,EAQE,OAPAA,EAAAF,EAAAG,KAAA,KAAMF,IAAM,KDZRX,KACGC,OAAOa,WAAW,gCAAgCC,QCavBC,IAAsBA,IACxDJ,EAAKK,MAAQ,CAACC,UAAWF,KACzBJ,EAAKO,SAAWP,EAAKO,SAASC,MAAIC,EAAAA,EAAAA,GAAAT,IAGlCA,CACF,EAdkBU,EAAAA,EAAAA,GAAAb,EAAAC,GAcjB,IAAAa,EAAAd,EAAAe,UAiBA,OAjBAD,EACDJ,SAAA,SAASM,GDL+BvB,IAAeM,IAAiBF,ICQtEoB,KAAKC,SAAS,CAACT,UAAWF,KAC5B,EAACO,EAEDK,OAAA,WAEE,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,SAAOC,GAAG,eAAeC,KAAK,eAAeC,KAAK,WAC3CC,UCnCW,4CDoCXd,SAAUO,KAAKP,WACdU,EAAAA,cAAA,SAAOK,QAAQ,gBAAe,UAG5C,EAACzB,CAAA,CA/BiB,CAASoB,EAAAA,WAkC7B,MAoBaM,EAAOA,IAAMN,EAAAA,cAAA,aAAO,QAEjC,MAtBkBO,KAChB,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAO5B,OACET,EAAAA,cAAA,YACEA,EAAAA,cAAA,UAAI,aACJA,EAAAA,cAAA,SAAIQ,EAAKE,KAAKC,aAAaC,OAC3BZ,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAG,KAAI,gBACbd,EAAAA,cAAA,SAAG,eACHA,EAAAA,cAACpB,EAAc,MACfoB,EAAAA,cAAA,UAAK,IAAIe,MAAOC,YACX,C","sources":["webpack://Mona04-Blog/./src/utils/ssr-helper.ts","webpack://Mona04-Blog/./src/pages/test.tsx","webpack://Mona04-Blog/./src/styles/controls/toggleSwitch.module.scss"],"sourcesContent":["const darkModeAttribute : string = \"data-theme\";\r\n\r\nexport function isBrowser() : boolean { return typeof window !== \"undefined\"}\r\nexport function isBroswerPreferDarkMode() : boolean {\r\n    if(!isBrowser()) return false;\r\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n}\r\n\r\nexport function isDarkMode() : boolean {\r\n    if(!isBrowser()) return false;\r\n    return document.documentElement.getAttribute(darkModeAttribute) === 'dark'\r\n}\r\nexport function setDarkMode() : void { \r\n    if(!isBrowser()) return;\r\n    document.documentElement.setAttribute(darkModeAttribute, 'dark'); \r\n}\r\nexport function setLightMode() : void { \r\n    if(!isBrowser()) return;\r\n    document.documentElement.setAttribute(darkModeAttribute, 'light') \r\n}\r\nexport function toggleDarkMode() : void { isDarkMode() ? setLightMode() : setDarkMode();}","import * as React from 'react'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport {toggleSwitch} from \"styles/controls/toggleSwitch.module.scss\";\r\nimport * as Utils from \"utils/ssr-helper\"\r\nimport \"styles/style.scss\";\r\n\r\ninterface IProps{}\r\ninterface IState{bDarkMode: boolean}\r\n\r\n\r\nclass DarkModeToggle extends React.Component<IProps, IState>\r\n{\r\n  defaultTheme : StyleSheet | undefined;\r\n  darkTheme : StyleSheet | undefined;\r\n  constructor(props:IProps)\r\n  {\r\n    super(props);\r\n  \r\n    Utils.isBroswerPreferDarkMode() ? Utils.setDarkMode() : Utils.setLightMode();\r\n    this.state = {bDarkMode: Utils.isDarkMode()}\r\n    this.onChange = this.onChange.bind(this);\r\n    //https://alvarotrigo.com/blog/toggle-switch-css/\r\n    //https://gwan-woo-jeong.github.io/blog/change-theme/\r\n    //https://typescript-kr.github.io/pages/classes.html\r\n  }\r\n  onChange(e: React.InputHTMLAttributes<HTMLInputElement>) : void \r\n  {   \r\n    Utils.toggleDarkMode();\r\n    this.setState({bDarkMode: Utils.isDarkMode()});\r\n  };\r\n\r\n  render()\r\n  {\r\n    return (\r\n      <>\r\n        <input id='darkmode-btn' name='darkmode-btn' type='checkbox' \r\n               className={toggleSwitch}\r\n               onChange={this.onChange}/>\r\n                <label htmlFor=\"darkmode-btn\">Toggle</label>         \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst AboutPage = () => {\r\n  const data = useStaticQuery(graphql`query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }`)\r\n  return (\r\n    <main>\r\n      <h1>Test Page</h1>\r\n      <p>{data.site.siteMetadata.title}</p>\r\n      <Link to=\"/\">Back to Home</Link>\r\n      <p>AAAAAAAAAAA</p>\r\n      <DarkModeToggle/>\r\n      <p>{(new Date().toString())}</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport const Head = () => <title>Test</title>\r\n\r\nexport default AboutPage","// extracted by mini-css-extract-plugin\nexport var toggleSwitch = \"toggleSwitch-module--toggle-switch--f0834\";"],"names":["darkModeAttribute","isBrowser","window","isDarkMode","document","documentElement","getAttribute","setDarkMode","setAttribute","setLightMode","DarkModeToggle","_ref","props","_this","call","matchMedia","matches","Utils","state","bDarkMode","onChange","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","this","setState","render","React","id","name","type","className","htmlFor","Head","AboutPage","data","useStaticQuery","site","siteMetadata","title","Link","to","Date","toString"],"sourceRoot":""}